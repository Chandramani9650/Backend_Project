Q-1: Write Mongo query to retrieve the unique citye's from the buyers address as "\_id".
Ans:  db.products.aggregate([{$group:{_id:"$address.city"}}])

Q-2:  Write Mongo query to retrieve the unique zip from the buyers address as "\_id".
Ans:  db.products.aggregate([{$group:{_id:"$address.zip"}}])

Q-3: Write Mongo query to retrieve the unique order_id in ascending order from the order_details.
Ans: db.order_details.aggregate([{$group:{_id:"$order_id"}},{$sort:{_id:1}}])

Q-4: . Write Mongo query to retrieve the unique customer_id from the orders.
Ans: db.orders.aggregate([{$group:{_id:"$customer_id"}}])

Q-5: Write Mongo query to retrieve the unique paymentMethod's from the payments collection as "\_id".
Ans: db.payments.aggregate([{$group:{_id:"$paymentMethod"}}])

Q-6:  Write Mongo query to retrieve the unique paymentstatus's from the payments collection as "\_id".
Ans: db.payments.aggregate([{$group:{_id:"$paymentstatus"}}])

Q-7: Write Mongo query to retrieve the unique category_id product from products.
Ans: db.products.aggregate([{$group:{_id:"$category_id",product:{$push:"$name"}}}])


Q-8: Write a MongoDB query to aggregate the total sales per customer and list the top 5 customers by total sales amount. Include the customer's ID and their total sales in the output.
Ans: db.sales.aggregate([{$group:{_id:"$customer_id",totalSales:{$sum:"$amount"}}},{$sort:{totalSales:-1}},{$limit:5}])

Q-9. Aggregate the orders to count how many there are per status and show only the first 3 statuses based on the aggregated count.
Ans: db.order.aggregate([{$group:{_id:"$status", count:{$sum:1}}},{$limit:3}])

Q-10. Write a MongoDB query to calculate the total amount of payments that have a success status.
Ans: db.payments.aggregate([{$match:{status:"success"}},{$group:{_id:"$status", totalAmount:{$sum:"$amount"}}}])


Q-11. Aggregate suppliers to find the one with the highest total quantity of products supplied, filtering to only include suppliers with a total product quantity greater than 100.
Ans: db.suppliers.aggregate([{$group:{_id:"$supplier_id", Quantity:{$sum:"$quantity"}}},{$match:{Quantity:{$gte:100}}},{$sort:{Quantity:-1}}, {$limit:1}])


Q-12. Write a MongoDB query to find the top-selling product category based on total sales revenue.
Ans: db.sales.aggregate([{$group:{_id:"$category_id",topSelling:{$sum:{$multiply:["$price","$quantity"]}}}},{$sort:{topSelling:-1}},{$limit:1}])


............................................................................................................................................

Q-14: Assess the impact of RAM capacity on laptop prices and ratings. Group laptops by RAM capacity and analyze the average price and rating for each group. Identify any significant trends or outliers.

Ans: db.laptops.aggregate([{$group: {_id: "$ram_memory",averagePrice: { $avg: "$Price" },averageRating: { $avg: "$Rating" },count: { $sum: 1 }} },{$sort: { _id: 1 }}
]);


Q-15: Investigate the price and rating distribution for gaming laptops. Identify which brands are leading in the gaming laptop market by comparing the average price, rating, GPU type, and RAM capacity for laptops categorized as gaming.

Ans: db.laptops.aggregate([
  // Match stage to filter gaming laptops
  {
    $match: {
      "gpu_type": "dedicated" // Assuming gaming laptops have dedicated GPUs
    }
  },
  // Group stage to calculate average price and rating for each brand
  {
    $group: {
      _id: {
        brand: "$brand",
        gpu_type: "$gpu_type",
        ram_memory: "$ram_memory"
      },
      averagePrice: { $avg: "$Price" },
      averageRating: { $avg: "$Rating" },
      count: { $sum: 1 }
    }
  },
  // Sort stage to arrange the results by brand and RAM capacity
  {
    $sort: { "_id.brand": 1, "_id.ram_memory": 1 }
  }
]);

Q-16: Analyze the warranty periods offered by different brands and their correlation with laptop prices and ratings. Identify any patterns or insights regarding how warranty periods influence consumer ratings and pricing strategies.

Ans: db.laptops.aggregate([
  // Group stage to calculate average price and rating for each brand and warranty period
  {
    $group: {
      _id: {
        brand: "$brand",
        year_of_warranty: "$year_of_warranty"
      },
      averagePrice: { $avg: "$Price" },
      averageRating: { $avg: "$Rating" },
      count: { $sum: 1 }
    }
  },
  // Sort stage to arrange the results by brand and warranty period
  {
    $sort: { "_id.brand": 1, "_id.year_of_warranty": 1 }
  }
]);


Q-17: Examine the relationship between processor brand (Intel, AMD, Apple) and laptop price, rating, and primary storage capacity. Group the laptops by processor brand and compare their average price, rating, and storage statistics to identify key differences.

Ans: db.laptops.aggregate([
  // Group stage to calculate average price, rating, and primary storage capacity for each processor brand
  {
    $group: {
      _id: "$processor_brand",
      averagePrice: { $avg: "$Price" },
      averageRating: { $avg: "$Rating" },
      averagePrimaryStorage: { $avg: "$primary_storage_capacity" },
      count: { $sum: 1 }
    }
  },
  // Sort stage to arrange the results by processor brand
  {
    $sort: { "_id": 1 }
  }
]);

